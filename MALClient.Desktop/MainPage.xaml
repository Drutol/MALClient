<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:new="using:MALClient.UWP.UserControls.New"
    xmlns:xamlConverters="using:MALClient.UWP.Shared.XamlConverters"
    xmlns:userControls="using:MALClient.UWP.Shared.UserControls"
    xmlns:attachedProperties="using:MALClient.UWP.Shared.UserControls.AttachedProperties"
    xmlns:ui="using:Microsoft.Advertising.WinRT.UI"
    x:Class="MALClient.UWP.MainPage"
    mc:Ignorable="d">

    <Page.Resources>
        <xamlConverters:VisiblityInverterConverter x:Key="VisiblityInverterConverter" />
        <xamlConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <xamlConverters:SearchFilterStatusToBrushConverter x:Key="SearchFilterStatusToBrushConverter" />
        <Storyboard x:Name="FadeInPinDialogStoryboard">
            <DoubleAnimation Storyboard.TargetName="PinDialog" Storyboard.TargetProperty="Opacity" SpeedRatio="3"
                             EnableDependentAnimation="True" From="0" To="1" />
            <PopInThemeAnimation Storyboard.TargetName="PinDialogInner" FromVerticalOffset="-20"
                                 FromHorizontalOffset="0" />
        </Storyboard>
        <Storyboard x:Name="FadeOutPinDialogStoryboard">
            <DoubleAnimation Storyboard.TargetName="PinDialog" Storyboard.TargetProperty="Opacity" SpeedRatio="3"
                             EnableDependentAnimation="True" From="1" To="0" />
            <PopOutThemeAnimation Storyboard.TargetName="PinDialogInner" />
        </Storyboard>
        <Storyboard x:Name="FadeInCurrentStatus">
            <DoubleAnimation Storyboard.TargetName="CurrentStatus" Storyboard.TargetProperty="Opacity" SpeedRatio="3"
                             EnableDependentAnimation="True" From="0" To="1" />
            <PopInThemeAnimation Storyboard.TargetName="CurrentStatus" FromVerticalOffset="20" FromHorizontalOffset="0" />
        </Storyboard>
        <Storyboard x:Name="FadeInCurrentOffStatus">
            <DoubleAnimation Storyboard.TargetName="CurrentOffStatus" Storyboard.TargetProperty="Opacity"
                             SpeedRatio="3" EnableDependentAnimation="True" From="0" To="1" />
            <PopInThemeAnimation Storyboard.TargetName="CurrentOffStatus" FromVerticalOffset="20"
                                 FromHorizontalOffset="0" />
        </Storyboard>
        <Storyboard x:Name="FadeInCurrentSubStatus">
            <DoubleAnimation Storyboard.TargetName="CurrentStatusSub" Storyboard.TargetProperty="Opacity"
                             SpeedRatio="3" EnableDependentAnimation="True" From="0" To="1" />
            <PopInThemeAnimation Storyboard.TargetName="CurrentStatusSub" FromVerticalOffset="20"
                                 FromHorizontalOffset="0" />
        </Storyboard>

        <Storyboard x:Key="MediaElementFadeInStoryboard">
            <FadeInThemeAnimation TargetName="MediaElementGrid" />
        </Storyboard>

        <Storyboard x:Key="MediaElementFadeOutStoryboard">
            <FadeOutThemeAnimation TargetName="MediaElementGrid" />
        </Storyboard>

        <Storyboard x:Key="ChangelogFadeInStoryboard">
            <FadeInThemeAnimation TargetName="ChangelogGrid" />
        </Storyboard>

        <Storyboard x:Key="ChangelogFadeOutStoryboard">
            <FadeOutThemeAnimation TargetName="ChangelogGrid" />
        </Storyboard>
        <xamlConverters:BottomStackMarginToFrameMarginWithAdConverter
            x:Key="BottomStackMarginToFrameMarginWithAdConverter" />
    </Page.Resources>

    <Page.DataContext>
        <Binding Path="Main" Source="{StaticResource DesktopLocator}" />
    </Page.DataContext>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" x:Name="Root">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="48"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LogoImage.Visibility" Value="Visible" />
                        <Setter Target="HamburgerControl.Width" Value="250" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="500" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LogoImage.Visibility" Value="Collapsed" />
                        <Setter Target="HamburgerControl.Width" Value="60" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid x:Name="TitleBar" Width="Auto" Grid.Row="0">
            <Grid.Background>
                <AcrylicBrush
                    BackgroundSource="HostBackdrop"
                    TintTransitionDuration="0:0:1"
                    TintColor="{StaticResource BrushDeepBackgroundColor}"
                    TintOpacity="0.85"
                    FallbackColor="{StaticResource BrushDeepBackgroundColor}"/>
            </Grid.Background>
            <Grid x:Name="MainTitleBar" Width="Auto" Height="Auto"  Background="Transparent">
            </Grid>
        </Grid>

        <Grid Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1">
            <Grid.Background>
                <AcrylicBrush
                    BackgroundSource="HostBackdrop"
                    TintTransitionDuration="0:0:1"
                    TintColor="{StaticResource BrushDeepBackgroundColor}"
                    TintOpacity="0.85"
                    FallbackColor="{StaticResource BrushDeepBackgroundColor}"/>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" MaxWidth="50" />
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid>
                <Button IsTabStop="False" HorizontalAlignment="Left" FontWeight="Bold"
                        FontFamily="Segoe MDL2 Assets"
                        BorderThickness="1"
                        Content="&#xE700;" Visibility="Visible"
                        Width="60" Height="45" Background="Transparent" FontSize="20"
                        Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                        Command="{Binding ReversePaneCommand}" 
                        Style="{StaticResource ButtonRevealStyle}"/>
                <Image x:Name="LogoImage" Width="250"
                       Stretch="Uniform" />
            </Grid>
            <Button Grid.Column="1" IsTabStop="False" HorizontalAlignment="Right"
                    VerticalAlignment="Center" Width="45" Height="48"
                    Command="{Binding NavigateMainBackCommand}"
                    Visibility="{Binding NavigateMainBackButtonVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                    Background="{ThemeResource SystemControlHighlightListAccentLowBrush}" BorderThickness="1" Style="{StaticResource ButtonRevealStyle}">
                <SymbolIcon Symbol="Back" Foreground="White" />
            </Button>
            <StackPanel Orientation="Horizontal" Grid.Column="2">

                <TextBlock x:Name="CurrentStatus" FontWeight="Bold" Text="{Binding CurrentStatus}"
                           TextTrimming="CharacterEllipsis"
                           VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="10,0,0,0"
                           Visibility="{Binding Visibility, Converter={StaticResource VisiblityInverterConverter}, ElementName=SearchInput}" />
                <TextBlock x:Name="CurrentStatusSub" FontWeight="Normal" Text="{Binding CurrentStatusSub}"
                           TextTrimming="CharacterEllipsis" FontSize="14"
                           Foreground="{ThemeResource BrushSettingsSubtitle}"
                           VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="10,0,0,0"
                           Visibility="{Binding Visibility, Converter={StaticResource VisiblityInverterConverter}, ElementName=SearchInput}" />
            </StackPanel>
            <Button IsTabStop="False" HorizontalAlignment="Right"
                    VerticalAlignment="Center" Width="45" Height="48" Grid.Column="3" Background="Transparent"
                    Command="{Binding RefreshDataCommand}"
                    Visibility="{Binding RefreshButtonVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                    BorderThickness="1"
                    Style="{StaticResource ButtonRevealStyle}">
                <SymbolIcon Symbol="Refresh" />
            </Button>
            <Grid Grid.Column="4" Background="Transparent" HorizontalAlignment="Stretch" Width="16"
                  Visibility="{Binding OffContentVisibility,Converter={StaticResource BoolToVisibilityConverter}}" />
            <Grid Column="5"
                  Visibility="{Binding OffContentVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                  Width="{Binding OffContentStatusBarWidth}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <Button IsTabStop="False" HorizontalAlignment="Right"
                        Background="{ThemeResource SystemControlHighlightListAccentLowBrush}"
                        VerticalAlignment="Center" Width="45" Height="48" Grid.Column="0"
                        Command="{Binding NavigateBackCommand}"
                        Visibility="{Binding NavigateOffBackButtonVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                        BorderThickness="1"
                        Style="{StaticResource ButtonRevealStyle}">
                    <SymbolIcon Symbol="Back" Foreground="White" />
                </Button>
                <Button IsTabStop="False" HorizontalAlignment="Right"
                        VerticalAlignment="Center" Width="45" Height="48" Grid.Column="3" Background="Transparent"
                        Command="{Binding HideOffContentCommand}"
                        BorderThickness="1"
                        Style="{StaticResource ButtonRevealStyle}">
                    <SymbolIcon Symbol="Clear" />
                </Button>
                <TextBlock x:Name="CurrentOffStatus" Grid.Column="1" FontWeight="Bold"
                           Text="{Binding CurrentOffStatus}"
                           TextTrimming="CharacterEllipsis" Margin="10,0,0,0" TextWrapping="WrapWholeWords"
                           MaxLines="2"
                           VerticalAlignment="Center" HorizontalAlignment="Stretch"
                           IsTextSelectionEnabled="{Binding IsCurrentStatusSelectable}" />
                <Button IsTabStop="False" HorizontalAlignment="Right"
                        VerticalAlignment="Center" Width="45" Height="48" Grid.Column="2" Background="Transparent"
                        Margin="0,0,-5,0"
                        Command="{Binding RefreshOffDataCommand}"
                        Visibility="{Binding OffRefreshButtonVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                        BorderThickness="1"
                        Style="{StaticResource ButtonRevealStyle}">
                    <SymbolIcon Symbol="Refresh" />
                </Button>
            </Grid>
            <Grid Margin="10,0,-5,0" Grid.Column="2" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <AutoSuggestBox x:Name="SearchInput" ItemsSource="{Binding CurrentHintSet}"
                                HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                QuerySubmitted="SearchInput_OnQuerySubmitted"
                                Text="{Binding CurrentSearchQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="{Binding SearchInputVisibility, Converter={StaticResource BoolToVisibilityConverter}}"
                                PlaceholderText="Search..." />
                <Grid Grid.Column="1"
                      Visibility="{Binding StatusFilterVisibilityLock,Converter={StaticResource BoolToVisibilityConverter}}">
                    <Button IsTabStop="False" Background="Transparent" Height="48" Width="45"
                            Visibility="{Binding SearchFilterButtonVisibility,Converter={StaticResource BoolToVisibilityConverter}}">
                        <Button.Flyout>
                            <Flyout>
                                <ListView ItemsSource="{Binding SearchFilterOptions}"
                                          SelectedIndex="{Binding SearchFilterSelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" />
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Flyout>
                        </Button.Flyout>
                        <SymbolIcon Symbol="Filter"
                                    Foreground="{Binding IsSearchFilterActive,Converter={StaticResource SearchFilterStatusToBrushConverter}}" />
                    </Button>
                </Grid>
                <Button IsTabStop="False" Grid.Column="1" Background="Transparent" Height="48" Width="45"
                        Visibility="{Binding ScrollToTopButtonVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                        Command="{Binding GoTopCommand}" BorderThickness="1" Style="{StaticResource ButtonRevealStyle}">
                    <SymbolIcon Symbol="Up" />
                </Button>
            </Grid>
            <userControls:LockableToggleButton IsTabStop="False" LockToggle="{Binding SearchToggleLock}"
                                               HorizontalAlignment="Right" IsThreeState="False"
                                               VerticalAlignment="Center" Width="45" Height="48" Grid.Column="3"
                                               Background="Transparent" Click="ToggleButton_OnClick"
                                               IsChecked="{Binding SearchToggleStatus,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                               Command="{Binding ToggleSearchCommand}"
                                               Visibility="{Binding SearchToggleVisibility, Converter={StaticResource BoolToVisibilityConverter}}"
                                               BorderThickness="1"
                                               Style="{StaticResource ToggleButtonRevealStyle}">
                <SymbolIcon Symbol="Find" />
            </userControls:LockableToggleButton>
        </Grid>
        <Grid VerticalAlignment="Stretch" Grid.Row="2">
            <Grid.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="/XamlResources/Controlstyles.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <new:HamburgerControl x:Name="HamburgerControl" Grid.Column="0" />
            <Grid x:Name="RootContentGrid" Grid.Column="1" Background="{ThemeResource BrushDeepBackground}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition x:Name="SplitterColumn" MaxWidth="16" Width="0" />
                    <ColumnDefinition x:Name="OffContentColumn" Width="Auto" MaxWidth="600" />
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" Grid.ColumnSpan="{Binding MainContentColumnSpan}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid Background="{ThemeResource BrushDeepBackground}"
                          Visibility="{Binding AdsContainerVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                          Height="90" Width="728"
                          Margin="{Binding Source={StaticResource DesktopLocator},Path=Hamburger.BottomStackPanelMargin}">
                        <!--<ui:AdControl AdUnitId="315597" ApplicationId="0b4d3120-9383-4469-9e80-812a15f124e3"/>-->
                        <ui:AdControl x:Name="AdControl" AdUnitId="315597" Height="90" Width="728"
                                      ApplicationId="0b4d3120-9383-4469-9e80-812a15f124e3" IsAutoRefreshEnabled="True" />
                    </Grid>
                    <Grid Grid.Row="1">
                        <!--Changelog-->
                        <Frame
                            x:Name="MainContent" PointerPressed="MainContent_OnPointerPressed"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                        <Grid Visibility="Collapsed" x:Name="ChangelogGrid"
                              attachedProperties:AnimatedVisibilityExtension.AnimatedCollapsedStoryboard="{StaticResource ChangelogFadeOutStoryboard}"
                              attachedProperties:AnimatedVisibilityExtension.AnimatedVisibleStoryboard="{StaticResource ChangelogFadeInStoryboard}"
                              attachedProperties:AnimatedVisibilityExtension.AnimatedVisiblity="{Binding ChangelogVisibility}"
                              MinWidth="300" MaxWidth="600" HorizontalAlignment="Right" VerticalAlignment="Top"
                              MaxHeight="600" BorderThickness="1"
                              BorderBrush="{StaticResource SystemControlBackgroundAccentBrush}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid Background="{StaticResource SystemControlBackgroundAccentBrush}">
                                <TextBlock Text="New update! What's new?" FontWeight="Bold" Foreground="White"
                                           HorizontalAlignment="Left" Margin="10,5" />
                                <Button Style="{StaticResource TextBlockButtonStyle}" HorizontalAlignment="Right" Foreground="White"
                                        Click="ButtonCloseChangelogOnClick">
                                    <SymbolIcon Symbol="Cancel"/>
                                </Button>
                            </Grid>
                            <Grid Padding="20" Grid.Row="1" Background="{ThemeResource BrushDeepBackground}">
                                <StackPanel>
                                    <TextBlock FontWeight="SemiBold" Text="{Binding ChangelogHeader}"
                                               TextWrapping="WrapWholeWords" Margin="0,5" />
                                    <MenuFlyoutSeparator Margin="-20,0,-20,5" Background="{ThemeResource BrushText}" />
                                    <ItemsControl ItemsSource="{Binding ChangelogContent}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="0,3">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="10" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Ellipse Fill="{ThemeResource BrushText}" Width="3" Height="3"
                                                             HorizontalAlignment="Left" VerticalAlignment="Top"
                                                             Margin="0,10,0,0" />
                                                    <TextBlock Grid.Column="1" Text="{Binding}"
                                                               TextWrapping="WrapWholeWords" />
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                            </Grid>
                        </Grid>

                    </Grid>
                </Grid>

                <toolkit:CustomGridSplitter x:Name="CustomGridSplitter"
                                            DraggingCompleted="CustomGridSplitter_OnDraggingCompleted"
                                            Grid.Column="1" IsTabStop="False"
                                            Visibility="{Binding OffContentVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                                            Background="{ThemeResource BrushSplitter}" ResizeDirection="Columns"
                                            ResizeBehavior="PreviousAndNext" />
                <Grid Visibility="{Binding OffContentVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                      Grid.Column="2"
                      Margin="{Binding ElementName=OffContent,Path=Margin}" SizeChanged="OffContent_OnSizeChanged"
                      Height="10" />
                <Frame Grid.Column="2" x:Name="OffContent" HorizontalAlignment="Stretch" MinWidth="420"
                       PointerPressed="OffContent_OnPointerPressed"
                       Visibility="{Binding OffContentVisibility,Converter={StaticResource BoolToVisibilityConverter}}"/>
                <Grid Grid.Column="0" Grid.ColumnSpan="{Binding MainContentColumnSpan}" x:Name="MediaElementGrid"
                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                      attachedProperties:AnimatedVisibilityExtension.AnimatedVisiblity="{Binding MediaElementVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                      attachedProperties:AnimatedVisibilityExtension.AnimatedVisibleStoryboard="{StaticResource MediaElementFadeInStoryboard}"
                      Visibility="Collapsed" Background="{ThemeResource BrushMediaElementShadow}"
                      attachedProperties:AnimatedVisibilityExtension.AnimatedCollapsedStoryboard="{StaticResource MediaElementFadeOutStoryboard}">
                    <Button HorizontalAlignment="Left" Margin="0,5,5,0" Width="45" Height="45" VerticalAlignment="Top"
                            Style="{StaticResource FancyButtonStyle}" Command="{Binding CopyMediaElementUrlCommand}">
                        <ToolTipService.ToolTip>
                            <ToolTip Content="Copy youtube link to clipboard." />
                        </ToolTipService.ToolTip>
                        <SymbolIcon Symbol="Link" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Button>
                    <Button HorizontalAlignment="Right" Margin="0,5,5,0" Width="45" Height="45" VerticalAlignment="Top"
                            Style="{StaticResource FancyButtonStyle}" Command="{Binding HideMediaElementCommand}">
                        <SymbolIcon Symbol="Cancel" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Button>
                    <MediaElement x:Name="MediaElement" Source="{Binding MediaElementSource}"
                                  AreTransportControlsEnabled="True" HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch" Margin="50">
                        <MediaElement.TransportControls>
                            <MediaTransportControls IsFullWindowButtonVisible="False" />
                        </MediaElement.TransportControls>
                    </MediaElement>
                </Grid>
            </Grid>
        </Grid>
        <Grid x:Name="PinDialog" Opacity="0"
              DataContext="{Binding Source={StaticResource UwpLocator},Path=PinTileDialog}"
              Visibility="{Binding GeneralVisibility}"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Row="1"
              Background="{ThemeResource BrushPinTileDialogOverlay}" Tapped="PinDialog_OnTapped">
            <Grid x:Name="PinDialogInner" Margin="20,20,20,78"
                  Background="{ThemeResource BrushPinTileDialogBackground}" VerticalAlignment="Center"
                  HorizontalAlignment="Stretch" MaxWidth="450" Padding="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel>
                    <TextBlock Text="Pin tile" FontWeight="Normal" HorizontalAlignment="Left" FontSize="30" />
                    <TextBlock Text="{Binding EntryData.Title}" FontWeight="SemiLight" HorizontalAlignment="Left"
                               Margin="0,5" />
                </StackPanel>
                <Button Width="50" Height="50" VerticalAlignment="Top" Grid.Row="0" Margin="0,-5,-5,0"
                        HorizontalAlignment="Right" Background="Transparent" BorderThickness="0"
                        Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                        Command="{Binding CloseDialogCommand}">
                    <SymbolIcon Symbol="Clear" />
                </Button>
                <MenuFlyoutSeparator Grid.Row="1" />
                <ScrollViewer Margin="0,5,0,0" Grid.Row="2" x:Name="ScrollView" Padding="0,0,10,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <StackPanel HorizontalAlignment="Stretch" Margin="0,5,0,0">
                            <TextBlock Text="Tile action:" FontSize="18" FontWeight="SemiLight"
                                       HorizontalAlignment="Left" Margin="5" />
                            <ComboBox HorizontalAlignment="Stretch" Margin="5,0"
                                      SelectedIndex="{Binding SelectedActionIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <ComboBox.Items>
                                    <ComboBoxItem Content="Open website" />
                                    <ComboBoxItem Content="{Binding OpenWebsiteText}" />
                                    <ComboBoxItem Content="Open in app" />
                                </ComboBox.Items>
                            </ComboBox>
                            <TextBox Margin="5,10" PlaceholderText="Desired url..."
                                     Text="{Binding TargetUrl,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                     Visibility="{Binding UrlInputVisibility}" HorizontalAlignment="Stretch" />
                        </StackPanel>
                        <StackPanel Grid.Row="1" HorizontalAlignment="Stretch" Margin="0,10,0,0">
                            <TextBlock Text="Tile image:" FontSize="18" FontWeight="SemiLight"
                                       HorizontalAlignment="Left" Margin="5" />
                            <ComboBox HorizontalAlignment="Stretch" Margin="5,0"
                                      SelectedIndex="{Binding SelectedImageOptionIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <ComboBox.Items>
                                    <ComboBoxItem Content="Stock cover image" />
                                    <ComboBoxItem Content="None" />
                                </ComboBox.Items>
                            </ComboBox>
                            <Grid HorizontalAlignment="Stretch" Visibility="{Binding ImagePreviewVisibility}">
                                <Pivot PointerWheelChanged="PinPivotItem_OnPointerWheelChanged">
                                    <Pivot.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}"
                                                       PointerWheelChanged="PinPivotItem_OnPointerWheelChanged" />
                                        </DataTemplate>
                                    </Pivot.HeaderTemplate>
                                    <PivotItem Header="Normal" PointerWheelChanged="PinPivotItem_OnPointerWheelChanged">
                                        <Grid>
                                            <userControls:CropControl ImageSource="{Binding PreviewImageNormal}"
                                                                      DesiredAspectRatio="1.0"
                                                                      Width="200" Height="320"
                                                                      VerticalAlignment="Center"
                                                                      HorizontalAlignment="Center"
                                                                      CropLeft="{Binding CropLeft,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                      CropTop="{Binding CropTop,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                      CropWidth="{Binding CropWidth,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                      CropHeight="{Binding CropHeight,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                <userControls:CropControl.Style>
                                                    <Style
                                                        TargetType="userControls:CropControl">
                                                        <Setter
                                                            Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate
                                                                    TargetType="userControls:CropControl">
                                                                    <Canvas
                                                                        x:Name="PART_Canvas"
                                                                        Background="#00000000">
                                                                        <Image
                                                                            x:Name="PART_Image"
                                                                            Stretch="Fill" />
                                                                    </Canvas>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </userControls:CropControl.Style>
                                            </userControls:CropControl>
                                            <Button HorizontalAlignment="Right" VerticalAlignment="Top"
                                                    Background="Transparent" BorderThickness="0"
                                                    Visibility="{Binding UndoCropVisibility}"
                                                    Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                                                    Command="{Binding UndoCropCommand}">
                                                <SymbolIcon Symbol="Undo" />
                                            </Button>
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom"
                                                        HorizontalAlignment="Right">
                                                <TextBlock VerticalAlignment="Center" Text="Confirm crop:" />
                                                <Button HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                                        Background="Transparent" BorderThickness="0"
                                                        Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                                                        Command="{Binding CropImageCommand}"
                                                        IsEnabled="{Binding IsCropEnabled}">
                                                    <SymbolIcon Symbol="Crop" />
                                                </Button>
                                            </StackPanel>
                                        </Grid>
                                    </PivotItem>
                                    <PivotItem Header="Wide" PointerWheelChanged="PinPivotItem_OnPointerWheelChanged">
                                        <Grid>
                                            <userControls:CropControl ImageSource="{Binding PreviewImageWide}"
                                                                      DesiredAspectRatio="2.0"
                                                                      Width="200" Height="320"
                                                                      VerticalAlignment="Center"
                                                                      HorizontalAlignment="Center"
                                                                      CropLeft="{Binding CropLeftWide,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                      CropTop="{Binding CropTopWide,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                      CropWidth="{Binding CropWidthWide,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                      CropHeight="{Binding CropHeightWide,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                <userControls:CropControl.Style>
                                                    <Style
                                                        TargetType="userControls:CropControl">
                                                        <Setter
                                                            Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate
                                                                    TargetType="userControls:CropControl">
                                                                    <Canvas
                                                                        x:Name="PART_Canvas"
                                                                        Background="#00000000">
                                                                        <Image
                                                                            x:Name="PART_Image"
                                                                            Stretch="Fill" />
                                                                    </Canvas>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </userControls:CropControl.Style>
                                            </userControls:CropControl>
                                            <Button HorizontalAlignment="Right" VerticalAlignment="Top"
                                                    Background="Transparent" BorderThickness="0"
                                                    Visibility="{Binding UndoWideCropVisibility}"
                                                    Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                                                    Command="{Binding UndoWideCropCommand}">
                                                <SymbolIcon Symbol="Undo" />
                                            </Button>
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom"
                                                        HorizontalAlignment="Right">
                                                <TextBlock VerticalAlignment="Center" Text="Confirm crop:" />
                                                <Button VerticalAlignment="Center" Background="Transparent"
                                                        BorderThickness="0"
                                                        Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                                                        Command="{Binding CropWideImageCommand}"
                                                        IsEnabled="{Binding IsCropEnabled}">
                                                    <SymbolIcon Symbol="Crop" />
                                                </Button>
                                            </StackPanel>
                                        </Grid>
                                    </PivotItem>
                                </Pivot>
                            </Grid>
                        </StackPanel>
                        <StackPanel Grid.Row="2" HorizontalAlignment="Stretch" Margin="0,6,0,0">
                            <TextBlock Text="Tile contents:" FontSize="18" FontWeight="SemiLight"
                                       HorizontalAlignment="Left" Margin="5" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <StackPanel>
                                    <CheckBox x:Name="PinDialogTitleCheckbox" Content="Title"
                                              IsChecked="{Binding PinSettings.AddTitle,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox Content="Big title"
                                              IsEnabled="{Binding ElementName=PinDialogTitleCheckbox,Path=IsChecked}"
                                              IsChecked="{Binding PinSettings.BigTitle,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox Content="Status"
                                              IsChecked="{Binding PinSettings.AddStatus,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                </StackPanel>
                                <StackPanel>
                                    <CheckBox Content="Watched"
                                              IsChecked="{Binding PinSettings.AddWatched,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox Content="Air day"
                                              IsChecked="{Binding PinSettings.AddAirDay,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox Content="Branding"
                                              IsChecked="{Binding PinSettings.AddBranding,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                </StackPanel>
                                <StackPanel>
                                    <CheckBox Content="Score"
                                              IsChecked="{Binding PinSettings.AddScore,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox Content="Image"
                                              IsChecked="{Binding PinSettings.AddImage,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                        <Button Grid.Row="3" Margin="5,6,5,0" Content="Pin" HorizontalAlignment="Stretch"
                                Command="{Binding PinThingCommand}" IsEnabled="{Binding IsPinEnabled}" />
                    </Grid>
                </ScrollViewer>
            </Grid>
        </Grid>

    </Grid>
</Page>