<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:new="using:MALClient.UWP.UserControls.New"
    xmlns:xamlConverters="using:MALClient.UWP.Shared.XamlConverters"
    xmlns:userControls="using:MALClient.UWP.Shared.UserControls"
    xmlns:attachedProperties="using:MALClient.UWP.Shared.UserControls.AttachedProperties"
    xmlns:ui="using:Microsoft.Advertising.WinRT.UI"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    x:Class="MALClient.UWP.MainPage"
    mc:Ignorable="d" SizeChanged="Page_SizeChanged">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ms-appx:///Microsoft.Toolkit.Uwp.UI.Controls/InAppNotification/Styles/VSCodeNotificationStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <xamlConverters:VisiblityInverterConverter x:Key="VisiblityInverterConverter" />
            <xamlConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <xamlConverters:SearchFilterStatusToBrushConverter x:Key="SearchFilterStatusToBrushConverter" />
            <Storyboard x:Name="FadeInPinDialogStoryboard">
                <DoubleAnimation Storyboard.TargetName="PinDialog" Storyboard.TargetProperty="Opacity" SpeedRatio="3"
                                 From="0" To="1" />
                <PopInThemeAnimation Storyboard.TargetName="PinDialogInner" FromVerticalOffset="-20"
                                     FromHorizontalOffset="0" />
            </Storyboard>
            <Storyboard x:Name="FadeOutPinDialogStoryboard">
                <DoubleAnimation Storyboard.TargetName="PinDialog" Storyboard.TargetProperty="Opacity" SpeedRatio="3"
                                 From="1" To="0" />
                <PopOutThemeAnimation Storyboard.TargetName="PinDialogInner" />
            </Storyboard>
            <Storyboard x:Name="FadeInCurrentStatus">
                <DoubleAnimation Storyboard.TargetName="CurrentStatus" Storyboard.TargetProperty="Opacity"
                                 SpeedRatio="3" From="0" To="1" />
                <PopInThemeAnimation Storyboard.TargetName="CurrentStatus" FromVerticalOffset="20"
                                     FromHorizontalOffset="0" />
            </Storyboard>
            <Storyboard x:Name="FadeInCurrentOffStatus">
                <DoubleAnimation Storyboard.TargetName="CurrentOffStatus" Storyboard.TargetProperty="Opacity"
                                 SpeedRatio="3" From="0" To="1" />
                <PopInThemeAnimation Storyboard.TargetName="CurrentOffStatus" FromVerticalOffset="20"
                                     FromHorizontalOffset="0" />
            </Storyboard>
            <Storyboard x:Name="FadeInCurrentSubStatus">
                <DoubleAnimation Storyboard.TargetName="CurrentStatusSub" Storyboard.TargetProperty="Opacity"
                                 SpeedRatio="3" From="0" To="1" />
                <PopInThemeAnimation Storyboard.TargetName="CurrentStatusSub" FromVerticalOffset="20"
                                     FromHorizontalOffset="0" />
            </Storyboard>

            <Storyboard x:Key="MediaElementFadeInStoryboard">
                <FadeInThemeAnimation TargetName="MediaElementGrid" />
            </Storyboard>

            <Storyboard x:Key="MediaElementFadeOutStoryboard">
                <FadeOutThemeAnimation TargetName="MediaElementGrid" />
            </Storyboard>

            <Storyboard x:Key="ChangelogFadeInStoryboard">
                <FadeInThemeAnimation TargetName="ChangelogGrid" />
            </Storyboard>

            <Storyboard x:Key="ChangelogFadeOutStoryboard">
                <FadeOutThemeAnimation TargetName="ChangelogGrid" />
            </Storyboard>
            <xamlConverters:BottomStackMarginToFrameMarginWithAdConverter
                x:Key="BottomStackMarginToFrameMarginWithAdConverter" />
        </ResourceDictionary>

    </Page.Resources>

    <Page.DataContext>
        <Binding Path="Main" Source="{StaticResource DesktopLocator}" />
    </Page.DataContext>

    <Grid x:Name="Root">
        <Grid.RowDefinitions>
            <RowDefinition Height="48" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.Background>
                <AcrylicBrush
                    BackgroundSource="HostBackdrop"
                    TintColor="{StaticResource BrushDeepBackgroundColor}"
                    TintOpacity="0.6"
                    FallbackColor="{StaticResource ColorDetailsBackground}" />
            </Grid.Background>
        </Grid>

        <Grid Width="Auto" HorizontalAlignment="Right" VerticalAlignment="Stretch" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" MaxWidth="50" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="4" Background="{ThemeResource BrushSplitter}" HorizontalAlignment="Stretch" Width="16"
                  Visibility="Collapsed" />
            <!--Visibility="{Binding OffContentVisibility,Converter={StaticResource BoolToVisibilityConverter}}"-->
            <Grid x:Name="OffContentTopGrid" Column="5"
                  Visibility="{Binding OffContentVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                  Width="{Binding OffContentStatusBarWidth}">
                <Grid.Background>
                    <AcrylicBrush
                        BackgroundSource="HostBackdrop"
                        TintColor="{StaticResource BrushDeepBackgroundColor}"
                        TintOpacity="0.6"
                        FallbackColor="{StaticResource ColorDetailsBackground}" />
                </Grid.Background>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <Button IsTabStop="False" HorizontalAlignment="Right"
                        VerticalAlignment="Stretch" Width="48" Grid.Column="0"
                        Command="{Binding NavigateBackCommand}"
                        Visibility="{Binding NavigateOffBackButtonVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                        BorderThickness="1" Background="Transparent"
                        Style="{StaticResource ButtonRevealStyle}">
                    <SymbolIcon Symbol="Back" Foreground="White" />
                </Button>
                <Button IsTabStop="False" HorizontalAlignment="Right"
                        VerticalAlignment="Stretch" Width="48" Grid.Column="3" Background="Transparent"
                        Command="{Binding HideOffContentCommand}"
                        BorderThickness="1"
                        Style="{StaticResource ButtonRevealStyle}">
                    <SymbolIcon Symbol="Clear" />
                </Button>
                <TextBlock x:Name="CurrentOffStatus" Grid.Column="1" FontWeight="Bold"
                           Text="{Binding CurrentOffStatus}"
                           TextTrimming="CharacterEllipsis" Margin="10,0,0,0" TextWrapping="WrapWholeWords"
                           MaxLines="2"
                           VerticalAlignment="Center" HorizontalAlignment="Stretch"
                           IsTextSelectionEnabled="{Binding IsCurrentStatusSelectable}" />
                <Button IsTabStop="False" HorizontalAlignment="Right"
                        VerticalAlignment="Stretch" Width="48" Grid.Column="2" Background="Transparent"
                        Margin="0,0,-2,0"
                        Command="{Binding RefreshOffDataCommand}"
                        Visibility="{Binding OffRefreshButtonVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                        BorderThickness="1"
                        Style="{StaticResource ButtonRevealStyle}">
                    <SymbolIcon Symbol="Refresh" />
                </Button>
            </Grid>
        </Grid>
        <Grid x:Name="HamburgerTopGrid" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left">
            <Grid.Background>
                <AcrylicBrush
                    BackgroundSource="HostBackdrop"
                    TintColor="{StaticResource BrushDeepBackgroundColor}"
                    TintOpacity="0.5"
                    FallbackColor="{StaticResource ColorHamburgerBackground}" />
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button IsTabStop="False" HorizontalAlignment="Left"
                    BorderThickness="1"
                    Width="48" VerticalAlignment="Stretch" Background="Transparent"
                    Command="{Binding ReversePaneCommand}"
                    Style="{StaticResource ButtonRevealStyle}">
                <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="16" Text="&#xE700;" />
            </Button>
        </Grid>
        <Grid VerticalAlignment="Stretch" Grid.Row="1">
            <Grid.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="/XamlResources/Controlstyles.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <new:HamburgerControl x:Name="HamburgerControl" Grid.Column="0" Grid.Row="1" />
            <Grid x:Name="RootContentGrid" Grid.Column="1" Background="{ThemeResource BrushDeepBackground}"
                  Grid.Row="0" Grid.RowSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition x:Name="SplitterColumn" MaxWidth="16" Width="0" />
                    <ColumnDefinition x:Name="OffContentColumn" Width="Auto" MaxWidth="600" />
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" Margin="0,-48,0,0" Grid.ColumnSpan="{Binding MainContentColumnSpan}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="48" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <!-- Start Classic Header -->
                    <Grid Grid.Row="0">
                        <!-- Left -->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <Button Grid.Column="0" IsTabStop="False" HorizontalAlignment="Left"
                                    VerticalAlignment="Stretch" Width="48" BorderThickness="1" Background="Transparent"
                                    Command="{Binding NavigateMainBackCommand}"
                                    Visibility="{Binding NavigateMainBackButtonVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                                    Style="{StaticResource ButtonRevealStyle}">
                                <TextBlock x:Name="BackButtonText" FontFamily="Segoe MDL2 Assets" Text="&#xE830;" />
                            </Button>
                            <TextBlock x:Name="CurrentStatus" FontWeight="Bold" Text="{Binding CurrentStatus}"
                                       TextTrimming="CharacterEllipsis"
                                       VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="10,-3,0,0"
                                       IsHitTestVisible="False" />
                            <TextBlock x:Name="CurrentStatusSub" FontWeight="Normal" Text="{Binding CurrentStatusSub}"
                                       TextTrimming="CharacterEllipsis"
                                       Foreground="{ThemeResource BrushSettingsSubtitle}"
                                       VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="10,0,0,0"
                                       IsHitTestVisible="False" />
                        </StackPanel>
                        <!-- Right -->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,0">
                            <StackPanel.Resources>
                                <Style TargetType="Button" BasedOn="{StaticResource ButtonRevealStyle}">
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="Background" Value="Transparent" />
                                </Style>
                            </StackPanel.Resources>
                            <AutoSuggestBox x:Name="SearchInput" Grid.Column="1" ItemsSource="{Binding CurrentHintSet}"
                                            HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                            QuerySubmitted="SearchInput_OnQuerySubmitted"
                                            Text="{Binding CurrentSearchQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Visibility="{Binding SearchInputVisibility, Converter={StaticResource BoolToVisibilityConverter}}"
                                            PlaceholderText="Search..." Height="32" MinWidth="250" Margin="0,0,5,0" />
                            <userControls:LockableToggleButton IsTabStop="False"
                                                               LockToggle="{Binding SearchToggleLock}"
                                                               IsThreeState="False"
                                                               VerticalAlignment="Stretch" Width="48"
                                                               Background="Transparent" Click="ToggleButton_OnClick"
                                                               IsChecked="{Binding SearchToggleStatus,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                               Command="{Binding ToggleSearchCommand}"
                                                               Visibility="{Binding SearchToggleVisibility, Converter={StaticResource BoolToVisibilityConverter}}"
                                                               BorderThickness="1"
                                                               Style="{StaticResource ToggleButtonRevealStyle}">
                                <SymbolIcon Symbol="Find" />
                            </userControls:LockableToggleButton>
                            <Button IsTabStop="False" Background="Transparent" VerticalAlignment="Stretch" Width="48"
                                    Visibility="{Binding SearchFilterButtonVisibility,Converter={StaticResource BoolToVisibilityConverter}}">
                                <Button.Flyout>
                                    <Flyout>
                                        <ListView ItemsSource="{Binding SearchFilterOptions}"
                                                  SelectedIndex="{Binding SearchFilterSelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}" />
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>
                                    </Flyout>
                                </Button.Flyout>
                                <SymbolIcon Symbol="Filter"
                                            Foreground="{Binding IsSearchFilterActive,Converter={StaticResource SearchFilterStatusToBrushConverter}}" />
                            </Button>
                            <Button IsTabStop="False"
                                    VerticalAlignment="Stretch" Width="48" Background="Transparent"
                                    Command="{Binding RefreshDataCommand}"
                                    Visibility="{Binding RefreshButtonVisibility,Converter={StaticResource BoolToVisibilityConverter}}">
                                <SymbolIcon Symbol="Refresh" />
                            </Button>
                            <Button IsTabStop="False" Grid.Column="5" Width="48" VerticalAlignment="Stretch"
                                    Visibility="{Binding ScrollToTopButtonVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                                    Command="{Binding GoTopCommand}">
                                <SymbolIcon Symbol="Up" />
                            </Button>
                        </StackPanel>
                    </Grid>
                    <!-- End Classic Header -->
                    <!-- Ads grid -->
                    <!--<Grid
                        Visibility="{Binding AdsContainerVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                        Height="90"
                        Margin="{Binding Source={StaticResource DesktopLocator},Path=Hamburger.BottomStackPanelMargin}"
                        Grid.Row="1">
                        <Grid.Background>
                            <AcrylicBrush
                                BackgroundSource="HostBackdrop"
                                TintColor="{StaticResource BrushDeepBackgroundColor}"
                                TintOpacity="0.6"
                                FallbackColor="{StaticResource ColorDetailsBackground}" />
                        </Grid.Background>
                        --><!--<ui:AdControl AdUnitId="315597" ApplicationId="0b4d3120-9383-4469-9e80-812a15f124e3"/>-->
                        <!--<ui:AdControl x:Name="AdControl" AdUnitId="315597" Height="90" Width="728"
                                      ApplicationId="0b4d3120-9383-4469-9e80-812a15f124e3" IsAutoRefreshEnabled="True" />--><!--
                    </Grid>-->
                    <Grid Grid.Row="2">
                        <!--Changelog-->
                        <Frame
                            x:Name="MainContent" PointerPressed="MainContent_OnPointerPressed"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                        <Grid Visibility="Collapsed" x:Name="ChangelogGrid"
                              attachedProperties:AnimatedVisibilityExtension.AnimatedCollapsedStoryboard="{StaticResource ChangelogFadeOutStoryboard}"
                              attachedProperties:AnimatedVisibilityExtension.AnimatedVisibleStoryboard="{StaticResource ChangelogFadeInStoryboard}"
                              attachedProperties:AnimatedVisibilityExtension.AnimatedVisiblity="{Binding ChangelogVisibility}"
                              MinWidth="300" MaxWidth="600" HorizontalAlignment="Right" VerticalAlignment="Top"
                              MaxHeight="600" BorderThickness="1"
                              BorderBrush="{StaticResource SystemControlBackgroundAccentBrush}"
                              Margin="0,50,40,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.Background>
                                <AcrylicBrush
                                    BackgroundSource="Backdrop"
                                    TintColor="{StaticResource BrushDeepBackgroundColor}"
                                    TintOpacity="0.6"
                                    FallbackColor="{StaticResource BrushDeepBackgroundColor}" />
                            </Grid.Background>
                            <Grid Background="Transparent">
                                <TextBlock Text="New update! What's new?" FontWeight="Bold" Foreground="White"
                                           HorizontalAlignment="Left" Margin="10,5" />
                                <Button HorizontalAlignment="Right" Foreground="White" Background="Transparent"
                                        Click="ButtonCloseChangelogOnClick" BorderThickness="1">
                                    <SymbolIcon Symbol="Cancel" />
                                </Button>
                            </Grid>
                            <Grid Padding="20,10,20,15" Grid.Row="1">
                                <StackPanel>
                                    <TextBlock FontWeight="SemiBold" Text="{Binding ChangelogHeader}"
                                               TextWrapping="WrapWholeWords" Margin="0,0,0,5" />
                                    <MenuFlyoutSeparator Margin="-20,0,-20,5" Background="{ThemeResource BrushText}" />
                                    <ItemsControl ItemsSource="{Binding ChangelogContent}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="0,3">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="10" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Ellipse Fill="{ThemeResource BrushText}" Width="3" Height="3"
                                                             HorizontalAlignment="Left" VerticalAlignment="Top"
                                                             Margin="0,10,0,0" />
                                                    <TextBlock Grid.Column="1" Text="{Binding}"
                                                               TextWrapping="WrapWholeWords" />
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                            </Grid>
                        </Grid>

                    </Grid>
                </Grid>

                <toolkit:CustomGridSplitter x:Name="CustomGridSplitter"
                                            DraggingCompleted="CustomGridSplitter_OnDraggingCompleted"
                                            Grid.Column="1" IsTabStop="False"
                                            Visibility="{Binding OffContentVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                                            Background="{ThemeResource BrushSplitter}" ResizeDirection="Columns"
                                            ResizeBehavior="PreviousAndNext" />
                <Grid Visibility="{Binding OffContentVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                      Grid.Column="2"
                      Margin="{Binding ElementName=OffContent,Path=Margin}" SizeChanged="OffContent_OnSizeChanged"
                      Height="10" />
                <Frame Grid.Column="2" x:Name="OffContent" HorizontalAlignment="Stretch" MinWidth="420"
                       PointerPressed="OffContent_OnPointerPressed"
                       Visibility="{Binding OffContentVisibility,Converter={StaticResource BoolToVisibilityConverter}}" />
                <Grid Grid.Column="0" Grid.ColumnSpan="{Binding MainContentColumnSpan}" x:Name="MediaElementGrid"
                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                      attachedProperties:AnimatedVisibilityExtension.AnimatedVisiblity="{Binding MediaElementVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                      attachedProperties:AnimatedVisibilityExtension.AnimatedVisibleStoryboard="{StaticResource MediaElementFadeInStoryboard}"
                      Visibility="Collapsed" Background="{ThemeResource BrushMediaElementShadow}"
                      attachedProperties:AnimatedVisibilityExtension.AnimatedCollapsedStoryboard="{StaticResource MediaElementFadeOutStoryboard}"
                      Margin="0,-48,0,0">
                    <Button HorizontalAlignment="Left" Margin="0,5,5,0" Width="45" Height="45" VerticalAlignment="Top"
                            Style="{StaticResource FancyButtonStyle}" Command="{Binding CopyMediaElementUrlCommand}">
                        <ToolTipService.ToolTip>
                            <ToolTip Content="Copy youtube link to clipboard." />
                        </ToolTipService.ToolTip>
                        <SymbolIcon Symbol="Link" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Button>
                    <Button HorizontalAlignment="Right" Margin="0,5,5,0" Width="45" Height="45" VerticalAlignment="Top"
                            Style="{StaticResource FancyButtonStyle}" Command="{Binding HideMediaElementCommand}">
                        <SymbolIcon Symbol="Cancel" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Button>
                    <MediaElement x:Name="MediaElement" Source="{Binding MediaElementSource}"
                                  AreTransportControlsEnabled="True" HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch" Margin="50">
                        <MediaElement.TransportControls>
                            <MediaTransportControls IsFullWindowButtonVisible="False" />
                        </MediaElement.TransportControls>
                    </MediaElement>
                </Grid>

                <controls:InAppNotification Grid.Column="0" x:Name="ExampleVSCodeInAppNotification"
                                    Style="{StaticResource VSCodeNotificationStyle}"
                                    AnimationDuration="00:00:00.6000000"
                                    VerticalAlignment="Bottom"
                                    Margin="0,0,0,24"
                                    MaxWidth="700"
                                    HorizontalAlignment="Left"
                                    ShowDismissButton="True"             
                                    VerticalOffset="0"       
                                    HorizontalOffset="100">
                    <controls:InAppNotification.ContentTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock VerticalAlignment="Center"
                                   Text="Share your anime endeavours!" Margin="20,0,35,0"
                                   TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />

                                <StackPanel Grid.Column="3" Orientation="Horizontal">
                                    <Button Click="ShareButtonOnClick">
                                        <TextBlock Text="Share"/>
                                    </Button>

                                    <Button Click="DismissButtonOnClick">
                                        <SymbolIcon>
                                            <SymbolIcon.Symbol>Cancel</SymbolIcon.Symbol>
                                        </SymbolIcon>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </controls:InAppNotification.ContentTemplate>
                </controls:InAppNotification>
            </Grid>
        </Grid>
        <Grid x:Name="PinDialog" x:Load="False"
              DataContext="{Binding Source={StaticResource UwpLocator},Path=PinTileDialog}"
              Visibility="{Binding GeneralVisibility}"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Row="1"
              Background="Transparent" Tapped="PinDialog_OnTapped" Margin="0,-48,0,0">
            <Grid x:Name="PinDialogInner" Margin="0,50,0,60" VerticalAlignment="Center"
                  HorizontalAlignment="Stretch" MaxWidth="550" Padding="10" BorderThickness="1"
                  BorderBrush="{StaticResource SystemControlBackgroundAccentBrush}"
                  Background="{StaticResource PopUpBackground}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel>
                    <TextBlock Text="Pin tile" FontWeight="Normal" HorizontalAlignment="Left" FontSize="30" />
                    <TextBlock Text="{Binding EntryData.Title}" FontWeight="SemiLight" HorizontalAlignment="Left"
                               Margin="0,5" />
                </StackPanel>
                <Button Width="50" Height="50" VerticalAlignment="Top" Grid.Row="0" Margin="0,-5,-5,0"
                        HorizontalAlignment="Right" Background="Transparent" BorderThickness="0"
                        Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                        Command="{Binding CloseDialogCommand}">
                    <SymbolIcon Symbol="Clear" />
                </Button>
                <MenuFlyoutSeparator Grid.Row="1" />
                <ScrollViewer Margin="0,5,0,0" Grid.Row="2" x:Name="ScrollView" Padding="0,0,10,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <StackPanel HorizontalAlignment="Stretch" Margin="0,5,0,0">
                            <TextBlock Text="Tile action:" FontSize="18" FontWeight="SemiLight"
                                       HorizontalAlignment="Left" Margin="5" />
                            <ComboBox HorizontalAlignment="Stretch" Margin="5,0"
                                      SelectedIndex="{Binding SelectedActionIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <ComboBox.Items>
                                    <ComboBoxItem Content="Open website" />
                                    <ComboBoxItem Content="{Binding OpenWebsiteText}" />
                                    <ComboBoxItem Content="Open in app" />
                                </ComboBox.Items>
                            </ComboBox>
                            <TextBox Margin="5,10" PlaceholderText="Desired url..."
                                     Text="{Binding TargetUrl,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                     Visibility="{Binding UrlInputVisibility}" HorizontalAlignment="Stretch" />
                        </StackPanel>
                        <StackPanel Grid.Row="1" HorizontalAlignment="Stretch" Margin="0,10,0,0">
                            <TextBlock Text="Tile image:" FontSize="18" FontWeight="SemiLight"
                                       HorizontalAlignment="Left" Margin="5" />
                            <ComboBox HorizontalAlignment="Stretch" Margin="5,0"
                                      SelectedIndex="{Binding SelectedImageOptionIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <ComboBox.Items>
                                    <ComboBoxItem Content="Stock cover image" />
                                    <ComboBoxItem Content="None" />
                                </ComboBox.Items>
                            </ComboBox>
                            <Grid HorizontalAlignment="Stretch" Visibility="{Binding ImagePreviewVisibility}">
                                <Pivot PointerWheelChanged="PinPivotItem_OnPointerWheelChanged">
                                    <Pivot.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}"
                                                       PointerWheelChanged="PinPivotItem_OnPointerWheelChanged" />
                                        </DataTemplate>
                                    </Pivot.HeaderTemplate>
                                    <PivotItem Header="Normal" PointerWheelChanged="PinPivotItem_OnPointerWheelChanged">
                                        <Grid>
                                            <userControls:CropControl ImageSource="{Binding PreviewImageNormal}"
                                                                      DesiredAspectRatio="1.0"
                                                                      Width="200" Height="320"
                                                                      VerticalAlignment="Center"
                                                                      HorizontalAlignment="Center"
                                                                      CropLeft="{Binding CropLeft,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                      CropTop="{Binding CropTop,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                      CropWidth="{Binding CropWidth,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                      CropHeight="{Binding CropHeight,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                <userControls:CropControl.Style>
                                                    <Style
                                                        TargetType="userControls:CropControl">
                                                        <Setter
                                                            Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate
                                                                    TargetType="userControls:CropControl">
                                                                    <Canvas
                                                                        x:Name="PART_Canvas"
                                                                        Background="#00000000">
                                                                        <Image
                                                                            x:Name="PART_Image"
                                                                            Stretch="Fill" />
                                                                    </Canvas>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </userControls:CropControl.Style>
                                            </userControls:CropControl>
                                            <Button HorizontalAlignment="Right" VerticalAlignment="Top"
                                                    Background="Transparent" BorderThickness="0"
                                                    Visibility="{Binding UndoCropVisibility}"
                                                    Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                                                    Command="{Binding UndoCropCommand}">
                                                <SymbolIcon Symbol="Undo" />
                                            </Button>
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom"
                                                        HorizontalAlignment="Right">
                                                <TextBlock VerticalAlignment="Center" Text="Confirm crop:" />
                                                <Button HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                                        Background="Transparent" BorderThickness="0"
                                                        Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                                                        Command="{Binding CropImageCommand}"
                                                        IsEnabled="{Binding IsCropEnabled}">
                                                    <SymbolIcon Symbol="Crop" />
                                                </Button>
                                            </StackPanel>
                                        </Grid>
                                    </PivotItem>
                                    <PivotItem Header="Wide" PointerWheelChanged="PinPivotItem_OnPointerWheelChanged">
                                        <Grid>
                                            <userControls:CropControl ImageSource="{Binding PreviewImageWide}"
                                                                      DesiredAspectRatio="2.0"
                                                                      Width="200" Height="320"
                                                                      VerticalAlignment="Center"
                                                                      HorizontalAlignment="Center"
                                                                      CropLeft="{Binding CropLeftWide,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                      CropTop="{Binding CropTopWide,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                      CropWidth="{Binding CropWidthWide,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                      CropHeight="{Binding CropHeightWide,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                <userControls:CropControl.Style>
                                                    <Style
                                                        TargetType="userControls:CropControl">
                                                        <Setter
                                                            Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate
                                                                    TargetType="userControls:CropControl">
                                                                    <Canvas
                                                                        x:Name="PART_Canvas"
                                                                        Background="#00000000">
                                                                        <Image
                                                                            x:Name="PART_Image"
                                                                            Stretch="Fill" />
                                                                    </Canvas>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </userControls:CropControl.Style>
                                            </userControls:CropControl>
                                            <Button HorizontalAlignment="Right" VerticalAlignment="Top"
                                                    Background="Transparent" BorderThickness="0"
                                                    Visibility="{Binding UndoWideCropVisibility}"
                                                    Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                                                    Command="{Binding UndoWideCropCommand}">
                                                <SymbolIcon Symbol="Undo" />
                                            </Button>
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom"
                                                        HorizontalAlignment="Right">
                                                <TextBlock VerticalAlignment="Center" Text="Confirm crop:" />
                                                <Button VerticalAlignment="Center" Background="Transparent"
                                                        BorderThickness="0"
                                                        Foreground="{StaticResource SystemControlBackgroundAccentBrush}"
                                                        Command="{Binding CropWideImageCommand}"
                                                        IsEnabled="{Binding IsCropEnabled}">
                                                    <SymbolIcon Symbol="Crop" />
                                                </Button>
                                            </StackPanel>
                                        </Grid>
                                    </PivotItem>
                                </Pivot>
                            </Grid>
                        </StackPanel>
                        <StackPanel Grid.Row="2" HorizontalAlignment="Stretch" Margin="0,6,0,0">
                            <TextBlock Text="Tile contents:" FontSize="18" FontWeight="SemiLight"
                                       HorizontalAlignment="Left" Margin="5" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <StackPanel>
                                    <CheckBox x:Name="PinDialogTitleCheckbox" Content="Title"
                                              IsChecked="{Binding PinSettings.AddTitle,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox Content="Big title"
                                              IsEnabled="{Binding ElementName=PinDialogTitleCheckbox,Path=IsChecked}"
                                              IsChecked="{Binding PinSettings.BigTitle,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox Content="Status"
                                              IsChecked="{Binding PinSettings.AddStatus,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                </StackPanel>
                                <StackPanel>
                                    <CheckBox Content="Watched"
                                              IsChecked="{Binding PinSettings.AddWatched,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox Content="Air day"
                                              IsChecked="{Binding PinSettings.AddAirDay,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox Content="Branding"
                                              IsChecked="{Binding PinSettings.AddBranding,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                </StackPanel>
                                <StackPanel>
                                    <CheckBox Content="Score"
                                              IsChecked="{Binding PinSettings.AddScore,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox Content="Image"
                                              IsChecked="{Binding PinSettings.AddImage,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                        <Button Grid.Row="3" Margin="5,6,0,0" Content="Pin" HorizontalAlignment="Stretch"
                                Command="{Binding PinThingCommand}" IsEnabled="{Binding IsPinEnabled}"
                                Style="{StaticResource ButtonRevealStyle}" BorderThickness="1" />
                    </Grid>
                </ScrollViewer>
            </Grid>
        </Grid>
        
    </Grid>
</Page>