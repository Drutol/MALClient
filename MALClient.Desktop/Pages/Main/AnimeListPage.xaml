<Page
    x:Class="MALClient.UWP.Pages.Main.AnimeListPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MALClient"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:anime="using:MALClient.Models.Models.Anime"
    xmlns:viewModels1="using:MALClient.XShared.ViewModels"
    xmlns:xamlConverters="using:MALClient.UWP.Shared.XamlConverters"
    xmlns:derived="using:MALClient.UWP.Shared.UserControls.Derived"
    xmlns:userControls="using:MALClient.UWP.Shared.UserControls"
    xmlns:items="using:MALClient.UWP.Shared.Items"
    DataContext="{Binding AnimeList , Source={StaticResource Locator}}"
    mc:Ignorable="d">

    <Page.Resources>
        <xamlConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <xamlConverters:DisplayModeToPresenterControlVisibility x:Key="DisplayModeToPresenterControlVisibility" />
        <xamlConverters:WorkModeToPivotFilterVisibility x:Key="WorkModeToPivotFilterVisibility" />
        <x:String x:Key="IndefiniteCompactListString">IndefiniteCompactList</x:String>
        <x:String x:Key="IndefiniteListString">IndefiniteList</x:String>
        <x:String x:Key="IndefiniteGridString">IndefiniteGrid</x:String>
        <x:String x:Key="WorkModeSeasonal">SeasonalWorkMode</x:String>
        <x:String x:Key="WorkModeAnyOther">AnyWorkMode</x:String>
    </Page.Resources>

    <Grid Background="{ThemeResource BrushDeepBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="/XamlResources/DictionaryHamburger.xaml" />
                </ResourceDictionary.MergedDictionaries>
                <Style TargetType="PivotHeaderPanel">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Style>
            </ResourceDictionary>
        </Grid.Resources>
        <Grid Grid.Row="0"
                    Visibility="Visible" Background="{ThemeResource BrushPivotInnerHeaderBarBackground}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Height="33" Background="{ThemeResource BrushPivotInnerHeaderBarBackground}" Visibility="{x:Bind ViewModel.AppBtnSortingVisibility,Converter={StaticResource BoolToVisibilityConverter},Mode=OneWay}" BorderThickness="1"
                                                                Style="{StaticResource ButtonRevealStyle}">
                <SymbolIcon Symbol="Sort" />
                <Button.Flyout>
                    <MenuFlyout x:Name="SortingFlyout">
                        <derived:RadioToggleMenuFlyoutItem x:Name="SortTitle" Text="Title"
                                                            Command="{Binding SetSortModeCommand}" CommandParameter="0"
                                                            GroupName="SortOptionsPivotUpperItems" />
                        <derived:RadioToggleMenuFlyoutItem x:Name="SortScore" Text="Score"
                                                            Command="{Binding SetSortModeCommand}" CommandParameter="1"
                                                            GroupName="SortOptionsPivotUpperItems" />
                        <derived:RadioToggleMenuFlyoutItem x:Name="Sort3" Text="{Binding Sort3Label}"
                                                            Command="{Binding SetSortModeCommand}" CommandParameter="2"
                                                            GroupName="SortOptionsPivotUpperItems" />
                        <derived:RadioToggleMenuFlyoutItem x:Name="SortAiring" Text="Soonest airing"
                                                            Command="{Binding SetSortModeCommand}" CommandParameter="3"
                                                            GroupName="SortOptionsPivotUpperItems"
                                                            Visibility="{Binding SortAirDayVisibility,Converter={StaticResource BoolToVisibilityConverter}}" />
                        <derived:RadioToggleMenuFlyoutItem x:Name="SortLastWatched" Text="Last updated"
                                                            Command="{Binding SetSortModeCommand}"
                                                            CommandParameter="4" GroupName="SortOptionsPivotUpperItems" />
                        <derived:RadioToggleMenuFlyoutItem x:Name="SortStartDate" Text="Start date"
                                                            Command="{Binding SetSortModeCommand}"
                                                            Visibility="{Binding MalApiSpecificControlsVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                                                            CommandParameter="5" GroupName="SortOptionsPivotUpperItems" />
                        <derived:RadioToggleMenuFlyoutItem x:Name="SortEndDate" Text="End date"
                                                            Command="{Binding SetSortModeCommand}"
                                                            Visibility="{Binding MalApiSpecificControlsVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                                                            CommandParameter="6" GroupName="SortOptionsPivotUpperItems" />  
                        <derived:RadioToggleMenuFlyoutItem x:Name="SortSeason" Text="Season"
                                                            Command="{Binding SetSortModeCommand}"
                                                            Visibility="{Binding MalApiSpecificControlsVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                                                            CommandParameter="8" GroupName="SortOptionsPivotUpperItems" />
                        <derived:RadioToggleMenuFlyoutItem x:Name="SortNone" Text="None"
                                                            Command="{Binding SetSortModeCommand}" CommandParameter="7"
                                                            GroupName="SortOptionsPivotUpperItems" />
                        <MenuFlyoutSeparator />
                        <ToggleMenuFlyoutItem x:Name="BtnOrderDescending" Text="Descending" Click="ChangeSortOrder" />
                    </MenuFlyout>
                </Button.Flyout>
            </Button>
            <Pivot Grid.Column="1" x:Name="UpperNavBarPivot" Style="{StaticResource PivotHamburgerStyle}" HorizontalAlignment="Stretch"
                   Visibility="{Binding WorkMode,Converter={StaticResource WorkModeToPivotFilterVisibility},ConverterParameter={StaticResource WorkModeAnyOther}}"
                   SelectionChanged="UpperNavBarPivotOnSelectionChanged"
                   SelectedIndex="{x:Bind ViewModel.StatusSelectorSelectedIndex,Mode=OneWay}">
                <Pivot.Resources>
                    <Style TargetType="PivotHeaderItem" BasedOn="{StaticResource PivotHeaderItemHamburgerStyle}" />
                </Pivot.Resources>
                <Pivot.Items>
                    <PivotItem Header="{Binding Filter1Label}" />
                    <PivotItem Header="Completed" />
                    <PivotItem Header="On hold" />
                    <PivotItem Header="Dropped" />
                    <PivotItem Header="{Binding Filter5Label}" />
                    <PivotItem Header="{Binding StatusAllLabel}" />
                </Pivot.Items>
                <Pivot.HeaderTemplate>
                    <DataTemplate>
                        <Grid>
                            <TextBlock FontSize="15" FontWeight="Medium" Text="{Binding}" Margin="5,0" />
                        </Grid>
                    </DataTemplate>
                </Pivot.HeaderTemplate>
                <Pivot.ItemTemplate>
                    <DataTemplate />
                </Pivot.ItemTemplate>
            </Pivot>
            <Pivot Grid.Column="1" x:Name="PivotSeasonSelection" Style="{StaticResource PivotHamburgerStyle}"
                   Visibility="{Binding WorkMode,Converter={StaticResource WorkModeToPivotFilterVisibility},ConverterParameter={StaticResource WorkModeSeasonal}}"
                   SelectedIndex="{Binding SeasonalUrlsSelectedIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                   ItemsSource="{Binding SeasonSelection}">
                <Pivot.Resources>
                    <Style TargetType="PivotHeaderItem" BasedOn="{StaticResource PivotHeaderItemHamburgerStyle}" />
                </Pivot.Resources>
                <Pivot.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock FontSize="15" FontWeight="Medium" Text="{Binding Name}" Margin="5,0" />
                    </DataTemplate>
                </Pivot.HeaderTemplate>
                <Pivot.ItemTemplate>
                    <DataTemplate />
                </Pivot.ItemTemplate>
            </Pivot>
        </Grid>
        <userControls:AlternatingListView x:Name="AnimeCompactItemsIndefinite" Grid.Row="1" HorizontalAlignment="Stretch"
                                      Margin="3,1,0,1" Padding="3,0,0,0"
                                      ItemsSource="{Binding AnimeCompactItems}" SelectionMode="Single"
                                      RightTapped="AnimeCompactItemsIndefinite_OnRightTapped"
                                      ItemClick="AnimeCompactItemsIndefinite_OnItemClick"
                                      ShowsScrollingPlaceholders="False"
                                      IsItemClickEnabled="True"
                                      Visibility="{Binding DisplayMode,Converter={StaticResource DisplayModeToPresenterControlVisibility},ConverterParameter={StaticResource IndefiniteCompactListString}}">
            <userControls:AlternatingListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="BorderBrush" Value="{StaticResource SystemControlBackgroundAccentBrush}" />
                    <Setter Property="BorderThickness" Value="2,0,0,0" />
                    <Setter Property="Margin" Value="1" />
                    <Setter Property="Padding" Value="3,0,0,0" />
                </Style>
            </userControls:AlternatingListView.ItemContainerStyle>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsStackPanel Margin="0,0,16,0" Orientation="Vertical" HorizontalAlignment="Stretch" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemContainerTransitions>
                <TransitionCollection>
                    <PopupThemeTransition FromVerticalOffset="100" />
                    <AddDeleteThemeTransition />
                    <ReorderThemeTransition />
                </TransitionCollection>
            </ListView.ItemContainerTransitions>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <items:AnimeCompactItem DataContext="{Binding}" DisplayContext="{Binding Source={StaticResource Locator},Path=AnimeList.AnimeItemsDisplayContext}"/>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.Footer>
                <Grid HorizontalAlignment="Center" VerticalAlignment="Bottom"
                      Visibility="{Binding CanLoadMore,Converter={StaticResource BoolToVisibilityConverter}}">
                    <Button Background="Transparent" HorizontalAlignment="Center" Command="{Binding LoadMoreCommand}">
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="More" />
                        </StackPanel>
                    </Button>
                </Grid>
            </ListView.Footer>
        </userControls:AlternatingListView>
        <GridView x:Name="AnimesItemsIndefinite" Grid.Row="1" ItemsSource="{Binding AnimeListItems}" MinWidth="400"
                  RightTapped="AnimesItemsIndefinite_OnRightTapped" SelectionMode="Single"
                  HorizontalAlignment="Center" HorizontalContentAlignment="Stretch"
                  ItemClick="AnimesItemsIndefinite_OnItemClick"
                  IsItemClickEnabled="True" ShowsScrollingPlaceholders="False"
                  Visibility="{Binding DisplayMode,Converter={StaticResource DisplayModeToPresenterControlVisibility},ConverterParameter={StaticResource IndefiniteListString}}">
            <GridView.ItemContainerStyle>
                <Style TargetType="GridViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="Padding" Value="5" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="Background" Value="{ThemeResource BrushAnimeItemInnerBackground}" />
                    <Setter Property="BorderBrush"
                            Value="{StaticResource SystemControlBackgroundAccentBrush}" />
                    <Setter Property="BorderThickness" Value="2,0,0,0" />
                </Style>
            </GridView.ItemContainerStyle>
            <GridView.ItemContainerTransitions>
                <TransitionCollection>
                    <PopupThemeTransition FromVerticalOffset="100" />
                    <AddDeleteThemeTransition />
                    <ReorderThemeTransition />
                </TransitionCollection>
            </GridView.ItemContainerTransitions>
            <GridView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsWrapGrid Orientation="Horizontal" HorizontalAlignment="Stretch"
                                   ItemWidth="{Binding ListItemGridWidth}" />
                </ItemsPanelTemplate>
            </GridView.ItemsPanel>
            <GridView.ItemTemplate>
                <DataTemplate>
                    <items:AnimeItem DataContext="{Binding}" DisplayContext="{Binding Source={StaticResource Locator},Path=AnimeList.AnimeItemsDisplayContext}"/>
                </DataTemplate>
            </GridView.ItemTemplate>
            <GridView.Footer>
                <Grid HorizontalAlignment="Center" VerticalAlignment="Bottom"
                      Visibility="{Binding CanLoadMore,Converter={StaticResource BoolToVisibilityConverter}}">
                    <Button Background="Transparent" HorizontalAlignment="Center" Command="{Binding LoadMoreCommand}">
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="More" />
                        </StackPanel>
                    </Button>
                </Grid>
            </GridView.Footer>
        </GridView>
        <GridView x:Name="AnimesGridIndefinite" Grid.Row="1" Margin="1,1,-16,0" ItemsSource="{Binding AnimeGridItems}"
                  MinWidth="200" IsItemClickEnabled="True"
                  RightTapped="AnimesGridIndefinite_OnRightTapped" SelectionMode="Single" ShowsScrollingPlaceholders="False"
                  HorizontalAlignment="Center" IsRightTapEnabled="True" ItemClick="AnimesGridIndefinite_OnItemClick"
                  Visibility="{Binding DisplayMode,Converter={StaticResource DisplayModeToPresenterControlVisibility},ConverterParameter={StaticResource IndefiniteGridString}}">
            <GridView.ItemContainerStyle>
                <Style TargetType="GridViewItem">
                    <Setter Property="Margin" Value="6,5" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                </Style>
            </GridView.ItemContainerStyle>
            <GridView.ItemContainerTransitions>
                <TransitionCollection>
                    <PopupThemeTransition FromVerticalOffset="100" />
                    <AddDeleteThemeTransition />
                    <ReorderThemeTransition />
                </TransitionCollection>
            </GridView.ItemContainerTransitions>
            <GridView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsWrapGrid Margin="0,0,16,0" Orientation="Horizontal" HorizontalAlignment="Stretch"
                                   ItemWidth="200" ItemHeight="350" />
                </ItemsPanelTemplate>
            </GridView.ItemsPanel>
            <GridView.ItemTemplate>
                <DataTemplate x:DataType="viewModels1:AnimeItemViewModel">
                    <items:AnimeGridItem DataContext="{x:Bind}" DisplayContext="{Binding Source={StaticResource Locator},Path=AnimeList.AnimeItemsDisplayContext}"/>
                </DataTemplate>
            </GridView.ItemTemplate>
            <GridView.Footer>
                <Grid HorizontalAlignment="Center" VerticalAlignment="Bottom"
                      Visibility="{Binding CanLoadMore,Converter={StaticResource BoolToVisibilityConverter}}">
                    <Button Background="Transparent" HorizontalAlignment="Center" Command="{Binding LoadMoreCommand}">
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="More" />
                        </StackPanel>
                    </Button>
                </Grid>
            </GridView.Footer>
        </GridView>
        <StackPanel Margin="{Binding ElementName=AnimesPivot, Path=Margin}" Grid.Row="1" HorizontalAlignment="Center"
                    VerticalAlignment="Center">
            <TextBlock
                Visibility="{Binding EmptyNoticeVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                Text="{Binding EmptyNoticeContent}"
                TextWrapping="WrapWholeWords" TextAlignment="Center" Foreground="#FFB9B9B9" />
            <Button x:Name="BtnSetSource" Content="Set source" Margin="0,10,0,0" VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Visibility="{Binding BtnSetSourceVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                    Click="ShowListSourceFlyout" />
        </StackPanel>
        <Grid Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              Visibility="{Binding Loading,Converter={StaticResource BoolToVisibilityConverter}}"
              Background="{ThemeResource BrushLoading}">
            <ProgressRing
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="75" Height="75"
                IsActive="True" />
        </Grid>        
        <Grid Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              Visibility="{Binding LoadingAllDetailsVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
              Background="{ThemeResource BrushLoadingNonTransparent}">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="10,0" CornerRadius="10" Padding="10" Background="{ThemeResource BrushLoadingAllShadow}">
                <StackPanel VerticalAlignment="Center">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10" >
                        <TextBlock Text="Loading all items details... "/>
                        <TextBlock Text="{Binding LoadingItemsStatus}"/>
                    </StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="0"/>
                        <ProgressBar Grid.Column="1"  HorizontalAlignment="Stretch" Margin="10,0" Value="{Binding ItemsLoaded}" Minimum="0" Maximum="{Binding AllItemsToLoad}"/>
                        <TextBlock Grid.Column="2" Text="{Binding AllItemsToLoad}"/>
                    </Grid>
                    <Button Style="{StaticResource TextBlockButtonStyle}" Content="Cancel" Margin="0,10" HorizontalAlignment="Center" Command="{Binding CancelLoadingAllItemsCommand}"/>
                </StackPanel>
            </Grid>
        </Grid>
        <CommandBar Grid.Row="2" x:Name="BottomCommandBar">
            <CommandBar.Background>
                <AcrylicBrush 
                    BackgroundSource="Backdrop"
                    TintTransitionDuration="0:0:1"
                    TintColor="{StaticResource BrushDeepBackgroundColor}"
                    TintOpacity="0.4"
                    FallbackColor="{StaticResource BrushDeepBackgroundColor}"/>
            </CommandBar.Background>
            <CommandBar.SecondaryCommands>
                <AppBarButton 
                    Visibility="{Binding AppBtnListSourceVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                    Icon="Contact2" Label="List source">
                    <AppBarButton.Flyout>
                        <Flyout x:Name="FlyoutListSource" Opened="FlyoutListSource_OnOpened">
                            <StackPanel>
                                <TextBlock VerticalAlignment="Center" Text="Username:" />
                                <StackPanel Orientation="Horizontal">
                                    <TextBox x:Name="TxtListSource" Loaded="BuggedFlyoutContentAfterAnniversaryUpdateOnLoaded"
                                             Text="{Binding ListSource,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                             Margin="5,5" KeyDown="ListSource_OnKeyDown" />
                                    <Button Command="{Binding RefreshCommand}">
                                        <SymbolIcon Symbol="Accept" />
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarButton Visibility="{Binding LoadAllDetailsButtonVisiblity,Converter={StaticResource BoolToVisibilityConverter}}" Label="Load all details" Command="{Binding LoadAllItemsDetailsCommand}"/>
            </CommandBar.SecondaryCommands>
            <AppBarButton Style="{ThemeResource AppBarButtonRevealStyle}" Icon="Back" Label="Go back to my list" Command="{Binding GoBackToMyListCommand}"
                          Visibility="{Binding AppBtnGoBackToMyListVisibility,Converter={StaticResource BoolToVisibilityConverter}}" />
            <AppBarButton Style="{ThemeResource AppBarButtonRevealStyle}" Icon="Refresh" Label="Reload" Command="{Binding RefreshCommand}" />
            <AppBarButton Style="{ThemeResource AppBarButtonRevealStyle}" Icon="View" Label="Display mode">
                <AppBarButton.Flyout>
                    <Flyout x:Name="ViewsFlyout">
                        <ListView ItemsSource="{Binding DisplayModes}"
                                  SelectedItem="{Binding CurrentlySelectedDisplayMode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Height" Value="25" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Item2}" Height="25" />
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Style="{ThemeResource AppBarButtonRevealStyle}" Icon="Calendar" Label="Select season"
                          Visibility="{Binding AppbarBtnPinTileVisibility,Converter={StaticResource BoolToVisibilityConverter}}">
                <AppBarButton.Flyout>
                    <Flyout x:Name="FlyoutSeasonSelection">
                        <StackPanel>
                            <ListView ItemsSource="{Binding SeasonSelection}" SelectionMode="Single"
                                      SelectedIndex="{Binding SeasonalUrlsSelectedIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="Background" Value="{ThemeResource BrushHamburgerInnerBackground}"/>
                                        <Setter Property="Height" Value="30"/>
                                        <Setter Property="MinHeight" Value="30"/>
                                        <Setter Property="Margin" Value="0,2"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate x:DataType="anime:AnimeSeason">
                                        <TextBlock Text="{x:Bind Name}" />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                            <TextBlock Text="Custom season" Margin="0,5" HorizontalAlignment="Center"/>
                            <StackPanel Orientation="Horizontal">
                                <ComboBox Loaded="BuggedFlyoutContentAfterAnniversaryUpdateOnLoaded" ItemsSource="{Binding SeasonSeasons}" Margin="5,0" MinWidth="70" SelectedItem="{Binding CurrentlySelectedCustomSeasonSeason,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                <ComboBox Loaded="BuggedFlyoutContentAfterAnniversaryUpdateOnLoaded" ItemsSource="{Binding SeasonYears}"  MinWidth="70" SelectedItem="{Binding CurrentlySelectedCustomSeasonYear,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                <Button Margin="5,0" Click="ButtonCustomSeasonGo" Command="{Binding GoToCustomSeasonCommand}">
                                    <SymbolIcon Symbol="Go"></SymbolIcon>
                                </Button>
                            </StackPanel>
                        </StackPanel>

                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Style="{ThemeResource AppBarButtonRevealStyle}" Icon="Filter" Label="Filter">
                <AppBarButton.Flyout>
                    <Flyout x:Name="FiltersFlyout">
                        <ListView
                            SelectedIndex="{Binding StatusSelectorSelectedIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                            SelectionMode="Single">
                            <ListView.Items>
                                <ListViewItem Content="{Binding Filter1Label}" />
                                <ListViewItem Content="Completed" />
                                <ListViewItem Content="On hold" />
                                <ListViewItem Content="Dropped" />
                                <ListViewItem Content="{Binding Filter5Label}" />
                                <ListViewItem Content="{Binding StatusAllLabel}" />
                            </ListView.Items>
                        </ListView>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Style="{ThemeResource AppBarButtonRevealStyle}" Icon="Shuffle" Label="Select one at random" Command="{Binding SelectAtRandomCommand}" />
        </CommandBar>
    </Grid>
</Page>